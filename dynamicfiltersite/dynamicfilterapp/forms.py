# -*- coding: utf-8 -*-
from django import forms
from models import Restaurant, RestaurantPredicate, PredicateBranch, WorkerID

class WorkerForm(forms.Form):
    """
    sets up a form for the worker to answer questions
    """
    # choice fields for worker answering predicates
    WORKER_ANSWER_CHOICES = (
        (1, "Yes (totally sure)"),
        (0.8, "Yes (fairly sure)"),
        (0.6, "Yes (somewhat sure)"),
        (0, "I don't know."),
        (-0.6, "No (somewhat sure)"),
        (-0.8, "No (fairly sure)"),
        (-1, "No (totally sure)"),
    )

    # sets up form for answering predicate
    answerToQuestion = forms.ChoiceField(choices=WORKER_ANSWER_CHOICES, widget=forms.Select(), label="Answer Choices:")
    feedback = forms.CharField(widget=forms.Textarea, label='Comments/Concerns/Feedback:', required=False)

class RestaurantAdminForm(forms.ModelForm):
    """
    sets up form for admin when adding in restaurants to database
    """
    class Meta:
        # Tells Django which model is being created and which fields to display
        model = Restaurant
        fields = ['name', 'url', 'text', 'street', 'city',
                'state', 'zipCode', 'country', 'predicate0Status',
                'predicate1Status', 'predicate2Status']
                
        #numOfPredicates field

    def save(self, commit=True):
        # Save (create or update) the Restaurant generated by this form
        instance = super(RestaurantAdminForm, self).save(commit=False)

        instance.queueIndex = len(Restaurant.objects.all())
        instance.save()
        
        # Create the three associated predicates if they don't exist  yet
        RestaurantPredicate.objects.get_or_create(index=0, restaurant=instance, 
            question="Does this restaurant have a casual atmosphere?")
        RestaurantPredicate.objects.get_or_create(index=1, restaurant=instance, 
            question="Is this a good restaurant for kids?")
        RestaurantPredicate.objects.get_or_create(index=2, restaurant=instance, 
            question="Does this restaurant serve Choco Pies?")
        
        # Create the three predicate branches if they don't exist yet
        for predicate in RestaurantPredicate.objects.all():
            PredicateBranch.objects.get_or_create(index=predicate.index, 
                question=predicate.question)

        return instance


class IDForm(forms.ModelForm):
    """
    sets up form for worker to enter in his/her ID number
    """
    class Meta:
        # Tells Django which model is being created and which fields to display
        model = WorkerID
        fields = ['workerID'] 

#     def clean_workerID(self):
#         return clean_unique(self, 'workerID')


# def clean_unique(form, field, format="This workerID has already been taken"):
#     value = form.cleaned_data.get(field)
#     print value
#     if value:
#         qs = form._meta.model._default_manager.filter(**{field:value})
#         print qs
#         if qs.count() > 0:
#             raise forms.ValidationError(format)
#     return value